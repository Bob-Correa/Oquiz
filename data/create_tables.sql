-- * Le mot clé BEGIN permet de démarrer une transaction qui sert à vérifier que toutes les instructions sont correctement exécutées, si une des instructions lève une erreur, aucune modif n'est apportée à la BDD
BEGIN;

DROP TABLE IF EXISTS "quiz_has_tag", "user", "tag", "quiz", "question", "answer", "level";

-- * User ( id, email, firstname, lastname, password )
CREATE TABLE "user" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email"       TEXT,
  "firstname"   TEXT,
  "lastname"    TEXT,
  "password"    TEXT,
  "created_at"  TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at"  TIMESTAMPTZ
);
-- Quiz ( id, title, description, #User(id) )
CREATE TABLE "quiz" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title"       TEXT,
  "description" TEXT,
  "user_id"     INTEGER NOT NULL REFERENCES "user"("id"),
  "created_at"  TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at"  TIMESTAMPTZ
);
-- Tag ( id, name )
CREATE TABLE "tag" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name"        TEXT,
  "created_at"  TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at"  TIMESTAMPTZ
);
-- Level ( id, name )
CREATE TABLE "level" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name"        TEXT,
  "created_at"  TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at"  TIMESTAMPTZ
);
-- Question ( id, description, anecdote, wiki, #Quiz(id), #Level(id) )
CREATE TABLE "question" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "description"    TEXT,
  "wiki"          TEXT,
  "anecdote"      TEXT,
    --    * l'instruction ON DELETE CASCADE va effacer les questions associés à un quiz
  "quiz_id"       INTEGER NOT NULL REFERENCES "quiz"("id") ON DELETE CASCADE,
  --    * l'instruction ON DELETE SET NULL va remplacer la valeur par null
  "level_id"      INTEGER REFERENCES "level"("id") ON DELETE SET NULL,
  "created_at"    TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at"    TIMESTAMPTZ
);
-- Answer ( id, description, is_valid, #Question(id) )
CREATE TABLE "answer" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "description" TEXT,
  "question_id" INTEGER NOT NULL REFERENCES "question"("id") ON DELETE CASCADE,
  "is_valid"    BOOLEAN NOT NULL DEFAULT false,
  "created_at"  TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

-- Quiz_Has_Tag ( id, #Quiz(id), #Tag(id) )
CREATE TABLE "quiz_has_tag" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  -- * l'instruction ON DELETE CASCADE va effacer l'association entre un tag et un quiz
  "quiz_id"  INTEGER NOT NULL REFERENCES "quiz"("id") ON DELETE CASCADE,
  "tag_id"   INTEGER NOT NULL REFERENCES "tag"("id"),
  "created_at"  TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at"  TIMESTAMPTZ
);

-- * On a fini la transaction, s'il n'y a pas eu d'erreur la BDD va écrire les données (persister les données)
COMMIT;